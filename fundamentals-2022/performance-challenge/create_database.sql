
    alter table if exists ADDRESS 
       drop constraint if exists FK9ec34yd7cnje629p602ax3vsm;

    alter table if exists AUTHOR 
       drop constraint if exists FKq80w9axtxvlouigsr41rea7xw;

    alter table if exists BOOK 
       drop constraint if exists FKbj8bip3gmii2iwakx86il4939;

    alter table if exists BOOK 
       drop constraint if exists FKcqaefr0gln499tviy4wd2tqqv;

    alter table if exists BOOK 
       drop constraint if exists FKtbryg17vaws8vg7kf1yalvh3j;

    alter table if exists BOOK 
       drop constraint if exists FKnt01aeva5yigik591y7hyei2k;

    alter table if exists CITY 
       drop constraint if exists FKiubycs56fw7khampxyv9krx5g;

    alter table if exists CUSTOMER 
       drop constraint if exists FK4q9crxu3nr5nuqfv811r1f9j8;

    alter table if exists EMPLOYEE 
       drop constraint if exists FKl1e6165d2k04n8y71egbt8txu;

    alter table if exists EMPLOYEE 
       drop constraint if exists FKaopo5yflegxeiq5jowvl8ek32;

    alter table if exists INVENTORYITEM 
       drop constraint if exists FKcx37crglb08ehqr1hg0m8v4wn;

    alter table if exists INVENTORYITEM 
       drop constraint if exists FKm7fw5vut5ah0jkmtbu7iq8esc;

    alter table if exists PUBLISHER 
       drop constraint if exists FK258xyxjvfjfvojp91t4eqbjor;

    alter table if exists PURCHASE 
       drop constraint if exists FKb6440hx23obi21h0yjb2d8no7;

    alter table if exists PURCHASE 
       drop constraint if exists FK1j9k9u1yge6rgupvl0k3okxdx;

    alter table if exists PURCHASE 
       drop constraint if exists FKfk0ldehq9miqx0j6cicu3aja2;

    alter table if exists PURCHASEITEM 
       drop constraint if exists FK7e04unwr0048s6u0so1js9k45;

    alter table if exists PURCHASEITEM 
       drop constraint if exists FKmupk2tfk3q5qt4nje5xn3mvpy;

    alter table if exists SHOP 
       drop constraint if exists FKghrartpsk8xuluqcidf0vpehe;

    alter table if exists STATE 
       drop constraint if exists FKi312viy9ek534eyiruaad6ixf;

    drop table if exists LANGUAGE cascade;

    drop table if exists ADDRESS cascade;

    drop table if exists AUTHOR cascade;

    drop table if exists BOOK cascade;

    drop table if exists CITY cascade;

    drop table if exists COUNTRY cascade;

    drop table if exists CUSTOMER cascade;

    drop table if exists EMPLOYEE cascade;

    drop table if exists GENRE cascade;

    drop table if exists INVENTORYITEM cascade;

    drop table if exists PUBLISHER cascade;

    drop table if exists PURCHASE cascade;

    drop table if exists PURCHASEITEM cascade;

    drop table if exists SHOP cascade;

    drop table if exists STATE cascade;

    create table LANGUAGE (
       ID int8 generated by default as identity,
        LANGUAGETAG varchar(255),
        primary key (ID)
    );

    create table ADDRESS (
       ID int8 generated by default as identity,
        ADDRESS varchar(255),
        ADDRESS2 varchar(255),
        ZIPCODE varchar(255),
        CITY_ID int8,
        primary key (ID)
    );

    create table AUTHOR (
       ID int8 generated by default as identity,
        NAME varchar(255),
        address_id int8,
        primary key (ID)
    );

    create table BOOK (
       ID int8 generated by default as identity,
        ISBN13 varchar(255),
        PURCHASE_PRICE float8,
        RETAIL_PRICE float8,
        TITLE varchar(255),
        AUTHOR_ID int8,
        GENRE_ID int8,
        LANGUAGE_ID int8,
        PUBLISHER_ID int8,
        primary key (ID)
    );

    create table CITY (
       ID int8 generated by default as identity,
        NAME varchar(255),
        STATE_ID int8,
        primary key (ID)
    );

    create table COUNTRY (
       ID int8 generated by default as identity,
        NAME varchar(255),
        CODE varchar(255),
        primary key (ID)
    );

    create table CUSTOMER (
       ID int8 generated by default as identity,
        NAME varchar(255),
        address_id int8,
        primary key (ID)
    );

    create table EMPLOYEE (
       ID int8 generated by default as identity,
        NAME varchar(255),
        address_id int8,
        SHOP_ID int8,
        primary key (ID)
    );

    create table GENRE (
       ID int8 generated by default as identity,
        NAME varchar(255),
        primary key (ID)
    );

    create table INVENTORYITEM (
       ID int8 generated by default as identity,
        AMOUNT int4,
        BOOK_ID int8,
        SHOP_ID int8,
        primary key (ID)
    );

    create table PUBLISHER (
       ID int8 generated by default as identity,
        NAME varchar(255),
        address_id int8,
        primary key (ID)
    );

    create table PURCHASE (
       ID int8 generated by default as identity,
        TIME_STAMP timestamp,
        CUSTOMER_ID int8,
        EMPLOYEE_ID int8,
        SHOP_ID int8,
        primary key (ID)
    );

    create table PURCHASEITEM (
       ID int8 generated by default as identity,
        AMOUNT int4,
        PRICE float8,
        BOOK_ID int8,
        PURCHASE_ID int8,
        primary key (ID)
    );

    create table SHOP (
       ID int8 generated by default as identity,
        NAME varchar(255),
        address_id int8,
        primary key (ID)
    );

    create table STATE (
       ID int8 generated by default as identity,
        NAME varchar(255),
        COUNTRY_ID int8,
        primary key (ID)
    );
create index idx_purchase_employee_id on PURCHASE (EMPLOYEE_ID);
create index idx_purchase_customer_id on PURCHASE (CUSTOMER_ID);
create index idx_purchase_shop_id on PURCHASE (SHOP_ID);
create index idx_purchase_time_stamp on PURCHASE (TIME_STAMP);
create index idx_purchase_item_purchase_id on PURCHASEITEM (PURCHASE_ID);

    alter table if exists ADDRESS 
       add constraint fk_address_city
       foreign key (CITY_ID) 
       references CITY;

    alter table if exists AUTHOR 
       add constraint  fk_author_address
       foreign key (address_id) 
       references ADDRESS;

    alter table if exists BOOK 
       add constraint fk_book_author
       foreign key (AUTHOR_ID) 
       references AUTHOR;

    alter table if exists BOOK 
       add constraint fk_book_genre
       foreign key (GENRE_ID) 
       references GENRE;

    alter table if exists BOOK 
       add constraint fk_book_language
       foreign key (LANGUAGE_ID) 
       references LANGUAGE;

    alter table if exists BOOK 
       add constraint fk_book_publisher
       foreign key (PUBLISHER_ID) 
       references PUBLISHER;

    alter table if exists CITY 
       add constraint fk_city_state
       foreign key (STATE_ID) 
       references STATE;

    alter table if exists CUSTOMER 
       add constraint fk_customer_address
       foreign key (address_id) 
       references ADDRESS;

    alter table if exists EMPLOYEE 
       add constraint fk_employee_address
       foreign key (address_id) 
       references ADDRESS;

    alter table if exists EMPLOYEE 
       add constraint fk_employee_shop
       foreign key (SHOP_ID) 
       references SHOP;

    alter table if exists INVENTORYITEM 
       add constraint fk_inventory_item_book
       foreign key (BOOK_ID) 
       references BOOK;

    alter table if exists INVENTORYITEM 
       add constraint fk_inventory_item_shop
       foreign key (SHOP_ID) 
       references SHOP;

    alter table if exists PUBLISHER 
       add constraint fk_publisher_address
       foreign key (address_id) 
       references ADDRESS;

    alter table if exists PURCHASE 
       add constraint fk_purchase_customer
       foreign key (CUSTOMER_ID) 
       references CUSTOMER;

    alter table if exists PURCHASE 
       add constraint fk_purchase_employee
       foreign key (EMPLOYEE_ID) 
       references EMPLOYEE;

    alter table if exists PURCHASE 
       add constraint fk_purchase_shop
       foreign key (SHOP_ID) 
       references SHOP;

    alter table if exists PURCHASEITEM 
       add constraint fk_purchase_item_book
       foreign key (BOOK_ID) 
       references BOOK;

    alter table if exists PURCHASEITEM 
       add constraint fk_purchase_item_purchase
       foreign key (PURCHASE_ID) 
       references PURCHASE;

    alter table if exists SHOP 
       add constraint fk_shop_address
       foreign key (address_id) 
       references ADDRESS;

    alter table if exists STATE 
       add constraint fk_state_country
       foreign key (COUNTRY_ID) 
       references COUNTRY;
